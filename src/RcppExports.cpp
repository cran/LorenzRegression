// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Fitness_cpp
double Fitness_cpp(arma::vec x, arma::vec Y, arma::mat X, arma::vec Z, arma::vec pi);
RcppExport SEXP _LorenzRegression_Fitness_cpp(SEXP xSEXP, SEXP YSEXP, SEXP XSEXP, SEXP ZSEXP, SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(Fitness_cpp(x, Y, X, Z, pi));
    return rcpp_result_gen;
END_RCPP
}
// Fitness_meanrank
double Fitness_meanrank(arma::vec x, arma::vec Y, arma::mat X, arma::vec pi);
RcppExport SEXP _LorenzRegression_Fitness_meanrank(SEXP xSEXP, SEXP YSEXP, SEXP XSEXP, SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(Fitness_meanrank(x, Y, X, pi));
    return rcpp_result_gen;
END_RCPP
}
// PLR_derivative_cpp
arma::vec PLR_derivative_cpp(arma::vec y, arma::mat X, arma::vec pi, arma::vec theta, double h, double gamma);
RcppExport SEXP _LorenzRegression_PLR_derivative_cpp(SEXP ySEXP, SEXP XSEXP, SEXP piSEXP, SEXP thetaSEXP, SEXP hSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(PLR_derivative_cpp(y, X, pi, theta, h, gamma));
    return rcpp_result_gen;
END_RCPP
}
// PLR_loss_cpp
double PLR_loss_cpp(arma::mat X, arma::vec y, arma::vec pi, arma::vec theta, double h, double gamma);
RcppExport SEXP _LorenzRegression_PLR_loss_cpp(SEXP XSEXP, SEXP ySEXP, SEXP piSEXP, SEXP thetaSEXP, SEXP hSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(PLR_loss_cpp(X, y, pi, theta, h, gamma));
    return rcpp_result_gen;
END_RCPP
}
// SCAD_derivative_cpp
arma::vec SCAD_derivative_cpp(arma::vec x, double lambda, double a);
RcppExport SEXP _LorenzRegression_SCAD_derivative_cpp(SEXP xSEXP, SEXP lambdaSEXP, SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(SCAD_derivative_cpp(x, lambda, a));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_LorenzRegression_Fitness_cpp", (DL_FUNC) &_LorenzRegression_Fitness_cpp, 5},
    {"_LorenzRegression_Fitness_meanrank", (DL_FUNC) &_LorenzRegression_Fitness_meanrank, 4},
    {"_LorenzRegression_PLR_derivative_cpp", (DL_FUNC) &_LorenzRegression_PLR_derivative_cpp, 6},
    {"_LorenzRegression_PLR_loss_cpp", (DL_FUNC) &_LorenzRegression_PLR_loss_cpp, 6},
    {"_LorenzRegression_SCAD_derivative_cpp", (DL_FUNC) &_LorenzRegression_SCAD_derivative_cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_LorenzRegression(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
